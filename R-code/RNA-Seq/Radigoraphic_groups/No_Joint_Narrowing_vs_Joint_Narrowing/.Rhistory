library(ChemmineR)
read.SDFstr(Molecules1.sdf)
getcwd()
getwd()
read.SDFstr(Molecules1.sdf)
sdfstr <- read.SDFstr("http://faculty.ucr.edu/~tgirke/Documents/R_BioCond/Samples/sdfsample.sdf")
sdfstr
view(sdfstr)
head(sdfstr)
setup(chemmineR)
read.SDFindex(sdfstr <- read.SDFstr("http://faculty.ucr.edu/~tgirke/Documents/R_BioCond/Samples/sdfsample.sdf"))
read.SDFstr("Molecules1.sdf")
sdfstr=read.SDFstr("Molecules1.sdf")
sdfstr
sdfstr[1:4]
header(sdfstr)
sdfstr[[1]]
sdfset <- read.SDFset("Molecules1.sdf")
sdfset
head(sdfset)
header(sdfset)
sdfset <- read.SDFset("Molecules27.sdf")
header(sdfset)
View(sdfstr)
View(sdfstr)
View(sdfset)
as(sdfset[1:4], "list")
atomblock(sdfset[1:4])
bondblock(sdfset[1:4])
datablock(sdfset[1:4])
datablock(sdfset)
blockmatrix <- datablock2ma(datablocklist=datablock(sdfset)
)
View(blockmatrix)
numchar <- splitNumChar(blockmatrix=blockmatrix)
View(numchar)
View(numchar)
numchar[["charMA"]]
numchar[["numMA"]]
propma <- data.frame(MF=MF(sdfset), MW=MW(sdfset), atomcountMA(sdfset))
View(propma)
View(propma)
datablock(sdfset) <- propma
View(propma)
write.SDF(sdfset, file="sub.sdf", sig=TRUE)
a=write.SDF(sdfset, file="sub.sdf", sig=TRUE)
plot(sdfset[1:4], print=FALSE)
sdf.visualize(sdfset)
sdf.visualize(sdfset)
apset <- sdf2ap(sdfset)
View(apset)
apset@ID
apset@AP
cmp.search(apset, apset[1], type=3, cutoff = 0.3, quiet=TRUE)
cmp.search(apset, apset[2], type=3, cutoff = 0.3, quiet=TRUE)
cmp.cluster(db=apset, cutoff = c(0.65, 0.5), quiet=TRUE)
propOB(sdfset[1])
BiocManager::install("ChemmineOB")
propOB(sdfset[1])
library(ChemmineOB)
BiocManager::install("ChemmineOB")
propOB(sdfset[1])
BiocManager::install(version='devel')
library(ChemmineR)
View(sdfstr)
R.version
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ChemmineOB")
browseVignettes("ChemmineOB")
BiocManager::install("ChemmineOB")
sdfset:view()
MW
initDb
conn <- initDb("compound.db")
BiocManager::install("RSQLite")
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install("ballgown")
library(ballgown)
BiocManager::install("ballgown")
library(ballgown)
library('ballgown')
library("ballgown")
library(‘/private/var/folders/7s/rjmsgd356v38lpq7s237410r0000gn/T/RtmpshgLpC/downloaded_packages’)
BiocManager::install("ballgown")
library(ballgown)
BiocManager::install("ballgown")
BiocManager::install("DESeq2")
library("BiocManager", lib.loc="~/opt/anaconda3/lib/R/library")
BiocManager::install("ballgown")
library("BiocManager", lib.loc="~/opt/anaconda3/lib/R/library")
install.packages(ballgown)
BiocManager::install("DESeq2")
library(ballgown)
library(DESeq2)
.libPaths()
BiocManager::install("ballgown")
.libPaths()
.libPaths(/private/var/folders/7s/rjmsgd356v38lpq7s237410r0000gn/T/Rtmpc8O2Zz/downloaded_packages)
.libPaths("/private/var/folders/7s/rjmsgd356v38lpq7s237410r0000gn/T/Rtmpc8O2Zz/downloaded_packages")
.libPaths()
.libPaths()
library("BiocManager", lib.loc="~/opt/anaconda3/lib/R/library")
BiocManager::install("ballgown")
library(ballgown)
.libPaths()
install.packages("~/opt/anaconda3/lib/R/library/ballgown_2.18.0.tar.gz", repos = NULL, type = "source")
install.packages("ballgown")
library(ballgown)
library("BiocManager", lib.loc="~/opt/anaconda3/lib/R/library")
library("BiocVersion", lib.loc="~/opt/anaconda3/lib/R/library")
BiocManager::install("ballgown")
install.packages(c("httpuv", "mongolite", "RCurl", "RJSONIO", "shiny", "stringi"))
install.packages(c("httpuv", "mongolite", "RCurl", "RJSONIO", "shiny", "stringi"))
install.packages(c("httpuv", "mongolite", "RCurl", "RJSONIO", "shiny", "stringi"))
install.packages(c("httpuv", "mongolite", "RCurl", "RJSONIO", "shiny", "stringi"))
install.packages(c("httpuv", "mongolite", "RCurl", "RJSONIO", "shiny", "stringi"))
install.packages(c("httpuv", "mongolite", "RCurl", "RJSONIO", "shiny", "stringi"))
install.packages(c("httpuv", "mongolite", "RCurl", "RJSONIO", "shiny", "stringi"))
install.packages(c("httpuv", "mongolite", "RCurl", "RJSONIO", "shiny", "stringi"))
library("BiocManager", lib.loc="~/opt/anaconda3/lib/R/library")
library("BiocVersion", lib.loc="~/opt/anaconda3/lib/R/library")
source("https://bioconductor.org/biocLite.R")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ballgown")
BiocManager::install("ballgown")
BiocManager::install("DEBSeq2")
install.packages("~/Downloads/ballgown_2.6.0.tar", repos = NULL)
install.packages("~/Downloads/DESeq2_1.26.0.tar", repos = NULL)
library("ballgown", lib.loc="~/opt/anaconda3/envs/my-rdkit-env/lib/R/library")
detach("package:ballgown", unload=TRUE)
library("ballgown", lib.loc="~/opt/anaconda3/envs/my-rdkit-env/lib/R/library")
detach("package:ballgown", unload=TRUE)
library("ballgown", lib.loc="~/opt/anaconda3/envs/my-rdkit-env/lib/R/library")
library("DESeq2", lib.loc="~/opt/anaconda3/envs/my-rdkit-env/lib/R/library")
install.packages("~/Downloads/rtracklayer_1.46.0.tar", repos = NULL)
library("ballgown", lib.loc="~/opt/anaconda3/envs/my-rdkit-env/lib/R/library")
install.packages("XML")
library("ballgown", lib.loc="~/opt/anaconda3/envs/my-rdkit-env/lib/R/library")
library("DESeq2", lib.loc="~/opt/anaconda3/envs/my-rdkit-env/lib/R/library")
install.packages("~/Downloads/SummarizedExperiment_1.16.1.tar", repos = NULL)
library("DESeq2", lib.loc="~/opt/anaconda3/envs/my-rdkit-env/lib/R/library")
browseVignettes("DESeq2")
library(DESeq2)
install.packages("~/Downloads/DelayedArray_0.12.2.tar", repos = NULL)
library(DESeq2)
install.packages("~/Downloads/BiocParallel_1.20.1.tar", repos = NULL)
library(DESeq2)
library("BiocParallel", lib.loc="~/opt/anaconda3/envs/my-rdkit-env/lib/R/library")
library(DESeq2)
BiocManager::install("DEBSeq2")
BiocManager::install("Ballgown")
BiocManager::install("ballgown")
library(ballgown)
BiocManager::install("ballgown")
ys.setenv(CONDA_BUILD_SYSROOT="/")
Sys.setenv(CONDA_BUILD_SYSROOT="/")
BiocManager::install("ballgown")
BiocManager::install("ChemmineR")
BiocManager::install("ballgown")
BiocManager::install("ballgown")
BiocManager::install("ballgown")
BiocManager::install("ballgown")
BiocManager::install("ballgown")
library(ballgown)
BiocManager::install("ballgown")
BiocManager::install("ballgown")
BiocManager::install("ballgown")
BiocManager::install("ChemmineOB")
BiocManager::install("ChemmineOB")
all_packages <- c(“rJava”)
uninstalled_packages <- setdiff(all_packages,
rownames(installed.packages()))
if (length(uninstalled_packages) > 0) {
install.packages(uninstalled_packages, type = “source”, repos=“
http://cran.rstudio.com/ 4”,
destdir="/u/pdharr/Rnew/downloads", INSTALL_opts="–verbose
–no-clean-on-error")
}
all_packages <- c("rJava")
uninstalled_packages <- setdiff(all_packages,
rownames(installed.packages()))
if (length(uninstalled_packages) > 0) {
install.packages(uninstalled_packages, type = “source”, repos=“
http://cran.rstudio.com/ 4”,
destdir="/u/pdharr/Rnew/downloads", INSTALL_opts="–verbose
–no-clean-on-error")
}
all_packages <- c(“rJava”)
uninstalled_packages <- setdiff(all_packages,
rownames(installed.packages()))
if (length(uninstalled_packages) > 0) {
install.packages(uninstalled_packages, type = "source", repos="http://cran.rstudio.com/ 4",
destdir="/u/pdharr/Rnew/downloads", INSTALL_opts="–verbose
–no-clean-on-error")
}
library(DESeq2)
library(ballgown)
library(DESeq2)
suppressPackageStartupMessages({
library(limma)
library(Glimma)
library(edgeR)
library(Mus.musculus)
})
BiocManager::install("Glimma")
data("iris")
dataset=iris
colnames(dataset)
colnames(dataset)
validation_index <- createDataPartition(dataset$Species, p=0.80, list=FALSE)
libarry(caret)
install.packages("caret")
libarry(caret)
install.packages("caret", dependencies=c("Depends", "Suggests"))
library(caret)
validation_index <- createDataPartition(dataset$Species, p=0.80, list=FALSE)
validation <- dataset[-validation_index,]
dataset <- dataset[validation_index,]
View(dataset)
View(validation)
dim(dataset)
sapply(dataset)
sapply(dataset, class)
head(dataset)
levels(dataset$Species)
percentage <- prop.table(table(dataset$Species)) * 100
cbind(freq=table(dataset$Species), percentage=percentage)
summary(dataset)
head(dataset)
# split input and output
x <- dataset[,1:4]
y <- dataset[,5]
par(mfrow=c(1,4))
for(i in 1:4){}
for(i in 1:4){boxplot(x[,i],main=names(iris[i]))}
for(i in 1:4){boxplot(x[,i],main=names(x[i]))}
names(x)
y <- dataset[,5]
plot(y)
featurePlot(x=x, y=y, plot="ellipse")
dim(dataset)
sapply(dataset, class)
sapply(x, class)
featurePlot(x=x, y=y, plot="box")
# density plots for each attribute by class value
scales <- list(x=list(relation="free"), y=list(relation="free"))
featurePlot(x=x, y=y, plot="density", scales=scales)
# density plots for each attribute by class value
scales <- list(x=list(relation="free"), y=list(relation="free"))
featurePlot(x=x, y=y, plot="density", scales=scales)
scales <- list(x=list(relation="free"), y=list(relation="free"))
scales
View(scales)
control <- trainControl(method="cv", number=10)
View(control)
metric <- "Accuracy"
Accuracy
"Accuracy"
set.seed(7)
a
fit.lda <- train(Species~., data=dataset, method="lda", metric=metric, trControl=control)
set.seed(7)
fit.cart <- train(Species~., data=dataset, method="rpart", metric=metric, trControl=control)
# kNN
set.seed(7)
fit.knn <- train(Species~., data=dataset, method="knn", metric=metric, trControl=control)
# c) advanced algorithms
# SVM
set.seed(7)
fit.svm <- train(Species~., data=dataset, method="svmRadial", metric=metric, trControl=control)
# Random Forest
set.seed(7)
fit.rf <- train(Species~., data=dataset, method="rf", metric=metric, trControl=control)
results <- resamples(list(lda=fit.lda, cart=fit.cart, knn=fit.knn, svm=fit.svm, rf=fit.rf))
summary(results)
dotplot(results)
print(fit.lda)
predictions <- predict(fit.lda, validation)
confusionMatrix(predictions, validation$Species)
confusionMatrix(predictions, validation$Species)
setwd("~/Desktop/RA/No_Joint_Narrowing_vs_Joint_Narrowing")
dat <- read.csv(file="Joint_Narrow_dat.csv", row.names=1)
#filtering and naming genes
library(biomaRt)
ensembl = useMart("ensembl",dataset="hsapiens_gene_ensembl")
nonprotein=biomaRt::getBM(attributes = c("ensembl_transcript_id", "transcript_version", "ensembl_gene_id", "external_gene_name", "entrezgene_id", "description", "gene_biotype"), filters='biotype', values=c("rRNA"), mart = ensembl)
#All protein coding genes
t2g <- biomaRt::getBM(attributes = c("ensembl_transcript_id", "transcript_version", "ensembl_gene_id", "external_gene_name", "entrezgene_id", "description", "gene_biotype"), filters='biotype', values="protein_coding", mart = ensembl)
#Ribosomal proteins
ribo.proteins <- unique(t2g$ensembl_gene_id[grep("ribosomal protein", t2g$description)])
rRNA.proteins <- unique(nonprotein$ensembl_gene_id[grep("rRNA", nonprotein$biotype)])
#remove version from identifier
rownames(dat) <- sub("\\.\\d+", "", rownames(dat))
#remove any ribosomal proteins from the RNA-Seq from the counts
dat <- dat[!rownames(dat) %in% ribo.proteins,]
dat <- dat[!rownames(dat) %in% rRNA.proteins,]
#design exp table
colTable <- read.csv("Joint_Narrowing_exp_info.csv",row.names=1)
#Deseq analysis
library(DESeq2)
dds <- DESeqDataSetFromMatrix(countData=dat,colData=colTable,design= ~ group)
keep <- rowSums(counts(dds) >=10) >= 10
dds <- dds[keep,]
dds <- DESeq(dds)
resultsNames(dds)
plotCounts(dds, gene="ENSG00000196735", intgroup="group")
plotCounts(dds, gene="ENSG00000196735", intgroup="group",transform = FALSE)
View(t2g)
plotCounts(dds, gene="ENSG00000224103", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000230708", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000196735", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000230708", intgroup="group",transform = FALSE)
plotCounts(dds, gene="NSG00000233904", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000233904", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000242092", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000230675", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000196735", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000241386", intgroup="group",transform = FALSE)
plotCounts(dds, gene="	ENSG00000230463", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000230463", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG0000024361", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000234154", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000243719", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000198502", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000198502", intgroup="group")
plotCounts(dds, gene="ENSG00000196126", intgroup="group")
plotCounts(dds, gene="ENSG00000196126", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000179344", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000237541", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000237541", intgroup="group")
plotCounts(dds, gene="ENSG00000237541", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000232629", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000232629", intgroup="group")
plotCounts(dds, gene="ENSG00000232962", intgroup="group")
plotCounts(dds, gene="ENSG00000241106", intgroup="group")
plotCounts(dds, gene="ENSG00000224103", intgroup="group")
plotCounts(dds, gene="ENSG00000230708", intgroup="group")
plotCounts(dds, gene="ENSG00000233904", intgroup="group")
plotCounts(dds, gene="ENSG00000242092", intgroup="group")
plotCounts(dds, gene="ENSG00000242361", intgroup="group")
plotCounts(dds, gene="ENSG00000236693", intgroup="group")
plotCounts(dds, gene="ENSG00000235844", intgroup="group")
plotCounts(dds, gene="ENSG00000242574", intgroup="group")
plotCounts(dds, gene="ENSG00000242574", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000204257", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000204257", intgroup="group")
plotCounts(dds, gene="ENSG00000204632", intgroup="group")
plotCounts(dds, gene="ENSG00000204632", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000206503", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000204252", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000223865", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000223865", intgroup="group")
plotCounts(dds, gene="ENSG00000231389", intgroup="group")
plotCounts(dds, gene="ENSG00000231389", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000231389", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000231389", intgroup="group")
plotCounts(dds, gene="ENSG00000232126", intgroup="group")
plotCounts(dds, gene="ENSG00000204642", intgroup="group")
plotCounts(dds, gene="ENSG00000204642", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000204642", intgroup="group")
plotCounts(dds, gene="ENSG00000234745", intgroup="group")
plotCounts(dds, gene="ENSG00000234745", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000241296", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000204287", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000204287", intgroup="group")
plotCounts(dds, gene="ENSG00000204287", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000227357", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000111537", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000111537", intgroup="group")
plotCounts(dds, gene="ENSG00000111537", intgroup="group",transform = FALSE)
