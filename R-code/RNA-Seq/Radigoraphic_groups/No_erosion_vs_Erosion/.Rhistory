setwd("~/Desktop/RA/No_erosion_vs_Erosion")
dat <- read.csv(file="Erosion_dat.csv", row.names=1)
#filtering and naming genes
library(biomaRt)
ensembl = useMart("ensembl",dataset="hsapiens_gene_ensembl")
nonprotein=biomaRt::getBM(attributes = c("ensembl_transcript_id", "transcript_version", "ensembl_gene_id", "external_gene_name", "entrezgene_id", "description", "gene_biotype"), filters='biotype', values=c("rRNA"), mart = ensembl)
#All protein coding genes
t2g <- biomaRt::getBM(attributes = c("ensembl_transcript_id", "transcript_version", "ensembl_gene_id", "external_gene_name", "entrezgene_id", "description", "gene_biotype"), filters='biotype', values="protein_coding", mart = ensembl)
#Ribosomal proteins
ribo.proteins <- unique(t2g$ensembl_gene_id[grep("ribosomal protein", t2g$description)])
rRNA.proteins <- unique(nonprotein$ensembl_gene_id[grep("rRNA", nonprotein$biotype)])
#remove version from identifier
rownames(dat) <- sub("\\.\\d+", "", rownames(dat))
#remove any ribosomal proteins from the RNA-Seq from the counts
dat <- dat[!rownames(dat) %in% ribo.proteins,]
dat <- dat[!rownames(dat) %in% rRNA.proteins,]
#design-exp table
colTable <- read.csv("Erosion_exp_info.csv",row.names=1)
#Deseq analysis
library(DESeq2)
dds <- DESeqDataSetFromMatrix(countData=dat,colData=colTable,design= ~ group)
keep <- rowSums(counts(dds) >=10) >= 10
dds <- dds[keep,]
dds <- DESeq(dds)
resultsNames(dds)
plotCounts(dds, gene="ENSG00000179344", intgroup="group")
plotCounts(dds, gene="ENSG00000204852", intgroup="group")
plotCounts(dds, gene="ENSG00000204852", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000144724", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000144724", intgroup="group")
plotCounts(dds, gene="ENSG00000144724", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000078018", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000078018", intgroup="group")
plotCounts(dds, gene="ENSG00000144724", intgroup="group")
plotCounts(dds, gene="ENSG00000078018", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000108379", intgroup="group",transform = FALSE)
plotCounts(dds, gene="ENSG00000108379", intgroup="group")
plotCounts(dds, gene="ENSG00000108379", intgroup="group",transform = FALSE)
